---
title: "Tutorial 1: Multiple Linear Regression"
author: ""
abstract: ""
date: today
date-format: long
fontsize: 11pt
papersize: lettersize
indent: false
linestretch: "1.1"
format:
  pdf:
    keep-tex: false
    fig_caption: yes
    number-sections: true
    shift-heading-level-by: 0
    reference-links: true
    reference-location: document
    toc: false
    pdf-engine: "xelatex"
---

In this tutorial, we will study the dataset we will be studying is part of the **World Economics and Politics Dataverse** (WEP Dataverse). 

The WEP Dataverse is a collaboration between of the Security and Political Economy (SPEC) Lab at the University of Southern California and the Niehaus Center for Globalization and Governance at Princeton University to create a queryable data resource for comparative and international political economy. 

The WEP Dataverse contains more than 800 variables from around 100 country-year and data-year datasets widely used for research. You can visit \url{https://ncgg.princeton.edu/wep/dataverse.html} for more information, including the **codebook**.

We will study the statistical association between corruption and economic development, one of the most classical questions in the political economy of development. Another way to rephrase the question is: **Does corruption hinder economic development?**

William Easterly, a Professor of Economics at New York University, has a brief discussion on this topic in his 2001 book ***The Elusive Quest for Growth*** published by the MIT Press (see Chapter 12). We will revisit this question again later this term when we cover observational or non-experimental causal inference.

Before you start, please download the dataset from GitHub and import it into `RStudio`.

\clearpage

# Variables

The WEP Dataverse retrieved variables containing `_VDEM` in their names from from the **Varieties of Democracy** (V-Dem) Dataset, the largest cross-national datasets of democratic politics and institutions built by the University of Gothenburg in Sweden.^[See \url{https://v-dem.net/}.] Another well-known dataset from the same university is the **Quality of Government** (QoG) project.^[See \url{https://www.gu.se/en/quality-government}.]

We will need the following variables.

  - `country` (categorical)
  - `year` (continuous/categorical)
  - `v2x_corr_VDEM` -- the index of political corruption, ranging between 0 and 10 (continuous)
  - `v2x_polyarchy_VDEM` -- the index of electoral democracy, ranging between 0 and 10 (continuous)
  - `democracy_DD` -- the indicator of democracy (binary/dummy)
  - `gdppc_WDI_PW` -- gross domestic product, per capita (continuous)
  - `lngdppc_WDI_PW` -- logged gross domestic product, per capita (continuous)

The binary indicator of democracy (i.e., it takes the value of 1 if the country is a democracy) is originally constructed by José Antonio Cheibub and his coauthors.^[See Cheibub, José Antonio, Jennifer Gandhi, and James Raymond Vreeland. 2010. "Democracy and Dictatorship Revisited." *Public Choice 143*(1): 67-101.] 

\clearpage

# Preparation

```{r, echo=F, eval=T, message=F}
rm(list=ls())
#wd <- dirname(rstudioapi::getActiveDocumentContext()$path); wd
#setwd(wd)
dta <- readr::read_csv("Data/05_01_23_0912pm_wep.csv")
```

Let us load the following packages first.

```{r, echo=T, eval=T, message=F}
library(car)
library(tidyverse)
library(stargazer)
library(modelsummary)
```

Now make sure you have imported the dataset into `RStudio`. Since the dataset is a `.csv` file, we can use `read_csv()` from the `readr` package -- this package has been included when you load `tidyverse`.

```{r, echo=T, eval=F}
dta <- read_csv("05_01_23_0912pm_wep.csv")
```

We can use the `tidyverse` approach to process the original dataset -- namely, to subset the dataset and to select/recode the variables for our purpose.

```{r, echo=T, eval=T, message=F}
dta_sel <- dta |>
  dplyr::select(country, year,
                gdppc_WDI_PW, lngdppc_WDI_PW,
                democracy_DD,
                v2x_polyarchy_VDEM, v2x_corr_VDEM) |>
  mutate(v2x_polyarchy_VDEM_10 = v2x_polyarchy_VDEM*10,
         v2x_corr_VDEM_10 = v2x_corr_VDEM*10) |>
  filter(year == 2000) |>
  unique() |>
  drop_na()
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**What does this chunk of code do? Can you unpack it line by line?**
:::
\vspace{0.5cm}

We can use `head()` to take a quick a look at our dataset.

```{r, echo=T, eval=F, message=F}
head(dta_sel)
```

Whenever you run into any new functions, it is always a good idea to use the question `?` to see what the function does. You can also consult the package manual, if necessary.

```{r, echo=T, eval=F, message=F}
?head
```

\clearpage

# Visualize the Data

Before we conduct any regression analysis, we can create a quick scatter plot to "see" the data. Since we are interested in the relationship between corruption and development, the variables of our particular interest now are `v2x_corr_VDEM_10` and `gdppc_WDI_PW`.

```{r, echo=T, eval=F, message=F}
plot(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel,
     xlab = "Political Corruption",
     ylab = "GDP per capita ($)",
     main = "Corruption and Development (2000)")
```

Let's draw the regression line, using `abline`. The `abline` function has two arguments `col` and `lwd` we can use to choose the color and width of the line.

```{r, echo=T, eval=T, message=F, fig.height=5, fig.width=5, fig.align="center"}
plot(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel,
     xlab = "Political Corruption",
     ylab = "GDP per capita ($)",
     main = "Corruption and Development (2000)")
abline(lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel),
       col = "red",
       lwd = 3)
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**What can we learn from this (two-dimensional) scatter plot? Anything we can do to make it (look) better?**
:::
\vspace{0.5cm}

\clearpage

# Correlation Without Regression

We can also check the pairwise correlation between `v2x_corr_VDEM_10` and `gdppc_WDI_PW`. One of the most common measures of pairwise correlation is the **Pearson correlation coefficient**. You can consult any statistical introductory textbook to see the formal definition or the formula. 

To get the Pearson correlation coefficient between two variables, we can use `cor()`.

```{r, echo=T, eval=T, message=F}
cor(dta_sel$v2x_corr_VDEM_10, dta_sel$gdppc_WDI_PW)
```

In the line above, we use the dollar sign `$` to call out a variable in a dataset.

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**What if our data contains missing values?**
:::
\vspace{0.5cm}

\clearpage

# Bivariate Linear Regression

## Model Specification

Now let us start the real business -- linear regression. Again, we are interested in the correlation between political corruption and economic development. To put it more specifically, here political corruption is the **explanatory** variable with economic development as the **outcome** variable.

It is always a good idea to **specify the model** before we start any analysis.

$$Y=\alpha+\beta X+\epsilon,$$

where

  - Y is GDP per capita (`gdppc_WDI_PW`)
  - X is political corruption (`v2x_corr_VDEM_10`)

Our goal is to use linear regression to estimate $\alpha$ and $\beta$, the intercept and slope respectively. In other words, linear regression should generate the following fitted line:

$$Y=\widehat{\alpha}+\widehat{\beta} X.$$

Note the fitted line should not include the error term.

## The Analysis

The most canonical function to carry out linear regression in `R` is `lm()`. Below we will carry out the analysis and use `summary` to see the results.

```{r, echo=T, eval=T, message=F}
b_corruption <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel)
summary(b_corruption)
```

`R` also provides several useful tools for us to look into some more specific information of any linear regression analysis.

| Function        | Purpose                        |
|-----------------|--------------------------------|
| `coef()`        | View the coefficients          |
| `confint()`     | View the confidence intervals  |
| `resid()`       | View the residuals             |
| `fitted()`      | View the predicted outcome     |

That being said, we can also use `ls()` to open (or "unearth") the output generated by the `lm()` function to obtain all the information above. We can similar use the dollar sign `$` to call them out.

```{r, echo=T, eval=T, message=F}
ls(b_corruption)
```

## Statistical Inference

### Statistical and Substantive Significance

The first order of business: **How should we interpret the estimated intercept and slope?** Are they statistically significant? Even if they are, does that mean corruption plays an important role in economic development?

```{r, echo=T, eval=T, message=F}
confint(b_corruption)
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**What do confidence intervals tell us?**^[Source: Qualtrics.]
```{r echo=FALSE, out.width="100%", fig.align="center"}
knitr::include_graphics("cis_q.pdf")
```
:::
\vspace{0.5cm}

There are several ways to characterize the substantive significance of the estimated slope.

For instance, you can try plugging the standard deviation/error of the predictor to see the corresponding change in the outcome variable when we move the predictor by one standard deviation/error.

```{r, echo=T, eval=T, message=F}
coef(b_corruption)[2]*sd(dta_sel$v2x_corr_VDEM_10, na.rm=T)
```

We can also check the median of the outcome variable compare it with the estimated slope.

```{r, echo=T, eval=T, message=F}
median(dta_sel$gdppc_WDI_PW, na.rm=T)
coef(b_corruption)[2]
```

There is no a golden rule for this and you should read more quant research papers to see what researchers do.

### Model Fit

Next, how about the **goodness-of-fit**? Let us take a look at the reported results again.

```{r, echo=T, eval=T, message=F}
b_corruption <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel)
summary(b_corruption)
```

R$^2$ is 0.46 while the adjusted R$^2$ is about the same. Again, R$^2$ is the fraction of the variance of the actual outcome explained by the variance of the predicted outcome. So we can verify the R$^2$ as follows.

```{r, echo=T, eval=T, message=F}
var_y_hat <- var(fitted(b_corruption))
var_y <- var(dta_sel$gdppc_WDI_PW)
var_y_hat/var_y
```

The adjusted R$^2$ is a more advanced version to penalize the inclusion to too many variables (or the so-called "overfitting"). In other words, the formula of the adjusted R$^2$ will take the number of explanatory variables into account and the inclusion of more explanatory variables will suppress R$^2$ (i.e., adjust the original R$^2$ downwards).^[See Section 4.2.6 in Imai (2018) for a  more detailed discussion.]

We can also try to calculate the sum of squared residuals as follows.

```{r, echo=T, eval=T, message=F}
sum(resid(b_corruption)^2)
```

### Diagnostics

Finally, you can try to run some **diagnostic tests to see how our model performs against the assumptions**.^[See Section 1.6.1 in Roback and Leglar (2020) for a more detailed discussion.]

\clearpage

# Multiple Linear Regression

Now, let us consider another explanatory variable -- democracy (`v2x_polyarchy_VDEM_10`). Political economists have also paid close attention to the relationship between democracy and development, with some arguing that democracy is more likely to induce long-term economic growth/development. For more discussion, check this article: **Bueno de Mesquita, Bruce, and George W. Downs. "Development and Democracy." *Foreign Affairs 84*(5): 77-86.**

## Model Specification

And with one more predictor our model now becomes

$$\text{Development} = \alpha + \beta_1(\text{Corruption}) + \beta_2(\text{Democracy}) + \epsilon.$$

Instead of using $X$ and $Y$, you can also use the abbreviation of the key variable names and explain the operationalization of each variable more carefully in the text. We will see good examples of quantitative research articles/notes in Week 5.

It is fairly straightforward to include more explanatory variables using `lm()`. You can use the functions have introduced previously to obtain the predicted outcome, residuals, confidence intervals, and estimated coefficients.

```{r, echo=T, eval=T, message=F}
m_mod <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10 + v2x_polyarchy_VDEM_10,
data=dta_sel)
summary(m_mod)
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**How else can you specify the data generation process of the dependent variable?**
:::
\vspace{0.5cm}

## Model Comparison

We can also use `anova()` to compare the goodness-of-fit across different models.

```{r, echo=T, eval=T, message=F}
anova(b_corruption, m_mod)
```

Numbers containing the small `e` mean they are tiny or huge (or: containing too many digits), and you can use the argument `scipen` in the `options()` function to turn it off.

```{r, echo=T, eval=T, message=F}
options(scipen=9999)
anova(b_corruption, m_mod)
```

## Regression Tables

We can also use the `stargazer()` function to present several regression models. Here is a quick example.

```{r, echo=T, eval=T, message=F}
stargazer(list(b_corruption, m_mod),
          omit.stat = c("f", "rsq", "ser"),
          dep.var.caption = "GDP per capita",
          column.labels = c("Model 1", "Model 2"),
          covariate.labels = c("Corruption", "Democracy"),
          type = "text",
          digits = 3, 
          no.space = T,
          intercept.bottom = TRUE,
          star.cutoffs = c(0.05, 0.01, 0.001))
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**Jack Russ has one of the most comprehensive guide on this function: \url{https://www.jakeruss.com/cheatsheets/stargazer/}. Check it out to the arguments you can add to adjust the table.**
:::
\vspace{0.5cm}

A more recent alternative to `stargazer` is `modelsummary`:

```{r, echo=T, eval=T, message=F}
modelsummary(list(b_corruption, m_mod),
             stars = c('*'=.1,'**'=.05,'***'=.01),
             gof_omit = "DF|Deviance|R2|AIC|BIC|F")
```

\vspace{0.5cm}
::: {.callout-note appearance="simple"}
**Visit \url{https://modelsummary.com/vignettes/modelsummary.html} to see the arguments you can add to adjust the table.**
:::
\vspace{0.5cm}

\clearpage

# Problem Set {.unnumbered}

## Question 1 {.unnumbered}

Visit V-Dem's website, \url{https://v-dem.net/data/the-v-dem-dataset/}, and read through the definitions of political corruption (`v2x_corr`) and electoral democracy (`v2x_polyarchy`) in their codebook. Do you agree with their definitions? How else can you measure the same concepts? Discuss.

## Question 2 {.unnumbered}

Use `v2x_polyarchy_VDEM_10` (the electoral democracy index) as the only independent variable to predict or explain a country's GDP per capita (`gdppc_WDI_PW`). 

  - Specify the model to be estimated (i.e., model specification with the error term)
  - Show the scatter plot with the regression line
  - Run the model (name the model as `b_democracy` in the script); interpret the estimated intercept and slope
  - Calculate the 95\% confidence interval of the estimated slope ($\widehat{\beta}$) and explain whether $\widehat{\beta}$ is statistically significant; if yes, discuss its substantive significance
  - Use `stargazer` or `modelsummary` to show `b_democracy` and `m_mod` together with `b_corruption`; look across all model specifications and discuss whether democracy has an impact on development when we account for political corruption
  - Use `anova()` to compare across different models to see which model performs the best

\newpage

# Extra: Interaction (Using the Binary Predictor of Democracy)

## Scatterplot with Regression Line by Group

```{r, echo=T, eval=T, message=F, fig.height=5, fig.width=6, fig.align="center"}
plot(gdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel,
     col = ifelse(dta_sel$democracy_DD == 1, "red", "blue"),
     pch = 16,
     xlab = "Political Corruption",
     ylab = "GDP per capita")
abline(lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10,
       data=dta_sel[dta_sel$democracy_DD == 1,]),
       col="red", lwd=2)
abline(lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10,
       data=dta_sel[dta_sel$democracy_DD == 0,]),
       col="blue", lwd=2)
```

## Multiple Regression Analysis with Interaction Term

```{r, echo=T, eval=T, message=F}
m_int_1 <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10 + democracy_DD,
              data=dta_sel)
m_int_2 <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM_10 + democracy_DD + 
              v2x_corr_VDEM_10:democracy_DD, data=dta_sel)

stargazer(list(m_int_1, m_int_2),
          omit.stat = c("f", "rsq", "ser"),
          dep.var.caption = "GDP per capita",
          column.labels = c("Model 1", "Model 2"),
          covariate.labels = c("Corruption", "Democracy (=1)",
          "Corruption x Democracy (=1)"),
          type = "text",
          digits = 3, 
          no.space = T,
          intercept.bottom = TRUE,
          star.cutoffs = c(0.05, 0.01, 0.001))
```

# Extra: Log Transformation 

```{r, echo=T, eval=F, message=F}
m_log1 <- lm(lngdppc_WDI_PW ~ v2x_corr_VDEM_10, data=dta_sel)
m_log2 <- lm(lngdppc_WDI_PW ~ v2x_polyarchy_VDEM_10, data=dta_sel)
m_log3 <- lm(lngdppc_WDI_PW ~ v2x_corr_VDEM_10 + v2x_polyarchy_VDEM_10, data=dta_sel)

stargazer(list(m_log1, m_log2, m_log3),
          omit.stat = c("f", "rsq", "ser"),
          dep.var.caption = "GDP per capita (log)",
          column.labels = c("Model 1", "Model 2", "Model 3"),
          covariate.labels = c("Corruption", "Democracy (=1)"),
          type = "text",
          digits = 3, 
          no.space = T,
          intercept.bottom = TRUE,
          star.cutoffs = c(0.05, 0.01, 0.001))
```

# Extra: Panel Analysis (Use Country-Year as the Unit of Observation)

```{r, echo=T, eval=F, message=F}
dta_sel_2 <- dta |>
  dplyr::select(country, year,
                gdppc_WDI_PW, lngdppc_WDI_PW, democracy_DD,
                v2x_polyarchy_VDEM, v2x_corr_VDEM) |>
  mutate(v2x_polyarchy_VDEM_10 = v2x_polyarchy_VDEM*10,
         v2x_corr_VDEM_10 = v2x_corr_VDEM*10) |>
  filter(year >= 2000 & year <= 2005) |>
  unique() |>
  drop_na()

m_long_1 <- lm(gdppc_WDI_PW ~ v2x_corr_VDEM + v2x_polyarchy_VDEM +
               as.factor(country) + as.factor(year),
               data=dta_sel_2)
m_long_2 <- lm(lngdppc_WDI_PW ~ v2x_corr_VDEM + v2x_polyarchy_VDEM +
               as.factor(country) + as.factor(year),
               data=dta_sel_2)

stargazer(list(m_long_1, m_long_2),
          omit = c("as.factor"),
          omit.stat = c("f", "rsq", "ser"),
          dep.var.caption = "GDP per capita",
          column.labels = c("Model 1", "Model 2"),
          covariate.labels = c("Corruption", "Democracy"),
          type = "text",
          digits = 3, 
          no.space = T,
          intercept.bottom = TRUE,
          star.cutoffs = c(0.05, 0.01, 0.001))
```
